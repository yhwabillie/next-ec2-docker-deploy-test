name: Nextjs standalone CI/CD

on:
  push:
    branches: [main]

env:
  DOCKER_CONTAINER: next-ec2-docker-deploy-test-cicd
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/next-ec2-docker-deploy-test
  VERSION: ${{ github.sha }}
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  build:
    name: Build Job
    runs-on: ubuntu-latest
    steps:
      - name: Github Checkout
        uses: actions/checkout@v4

      # buildx(멀티 플랫폼 빌드 라이브러리, 개발 로컬 M1 -> EC2 리눅스 동일한 이미지 생성 플러그인)
      # 캐싱 대상 (yarn 의존성, 도커 레이어, .next>cache 폴더)
      - name: SetUp Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      # 도커 레이어 & next>cache폴더 캐싱
      - name: Cache Docker Layers
        uses: actions/cache@v4
        with:
          path: |
            /temp/.buildx-cache
            ${{ github.workspace }}/.next/cache
          key: |
            ${{ runner.os }}-buildx-${{ env.VERSION }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ env.VERSION }}-${{ hashFiles('**/yarn.lock') }}-
            ${{ runner.os }}-buildx-${{ env.VERSION }}-

      - name: Login ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  deploy:
    needs: build
    name: Deploy Job
    runs-on: [self-hosted, label-go]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Docker RUN
        run: |
          docker stop ${{ env.DOCKER_CONTAINER }} && docker rm ${{ env.DOCKER_CONTAINER }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest
          docker run -d -p 80:3000 --name ${{ env.DOCKER_CONTAINER }} --restart always ${{ env.DOCKER_IMAGE }}:latest
